// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output = "../../../../../node_modules/.prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum PostType {
  video
  text
  cite
  photo
  link
}

model Post {
  id              String    @id @default(uuid())
  type            PostType
  isPublished     Boolean   @default(false) @map("is_published")
  isRepost        Boolean   @default(false) @map("is_repost")
  tags            String[]
  authorId        String    @map("author_id")
  originPostId    String    @default("") @map("origin_post_id")
  originAuthorId  String    @default("") @map("origin_author_id")
  publishedAt     DateTime? @updatedAt @map("published_at")
  createdAt       DateTime  @default(now()) @map("created_at")
  creator         String?   @default("")
  citeText        String?   @default("") @map("cite_text")
  linkURL         String?   @default("") @map("link_URL")
  linkDescription String?   @default("") @map("link_description")
  photo           String?   @default("")
  text            String?   @default("")
  title           String?   @default("")
  announce        String?   @default("")
  videoURL        String?   @default("") @map("video_URL")
  comments        Comment[]
  likes           Like[]

  @@map("posts")
}

model Comment {
  id        String    @id @default(uuid())
  text      String
  post      Post      @relation(fields: [postId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  postId    String    @map("post_id")
  updatedAt DateTime? @updatedAt @map("updated_at")
  createdAt DateTime  @default(now()) @map("created_at")
  userId    String   @map("user_id")

  @@index([postId])
  @@map("comments")
}

model Like {
  id        String    @id @default(uuid())
  post      Post      @relation(fields: [postId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  postId    String    @map("post_id")
  userId    String    @map("user_id")
  updatedAt DateTime? @updatedAt @map("updated_at")
  createdAt DateTime  @default(now()) @map("created_at")

  @@index([postId])
  @@map("likes")
}
